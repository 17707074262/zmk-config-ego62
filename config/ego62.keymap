/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp ESCAPE            &kp N1     &kp N2     &kp N3     &kp N4        &kp N5                                       &kp N6     &kp N7             &kp N8     &kp N9   &kp N0         &kp MINUS
&kp BACKSPACE         &kp Q      &kp W      &kp E      &kp R         &kp T                                        &kp Y      &kp U              &kp I      &kp O    &kp P          &kp EQUAL
&kp DELETE            &kp A      &kp S      &kp D      &kp F         &kp G                                        &kp H      &kp J              &kp K      &kp L    &kp SEMICOLON  &kp DOUBLE_QUOTES
&kp CLCK              &kp Z      &kp X      &kp C      &kp V         &kp B                                        &kp N      &kp M              &kp COMMA  &kp DOT  &kp QUESTION   &kp EXCLAMATION
&kp NON_US_BACKSLASH  &kp TILDE  &kp LC(C)  &kp LC(V)  &kp LEFT_ALT  &kp LEFT_SHIFT  &kp LEFT_CONTROL  &kp ENTER  &kp SPACE  &kp LC(LA(EQUAL))  &kp LA(O)  &to 1    &kp LBKT       &kp RBKT
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        layer_1 {
            bindings = <
&kp ESC  &kp F1     &kp F2  &kp F3  &kp F4  &kp F5                &kp F6  &kp F7    &kp F8         &kp F9            &kp F10         &kp F11
&none    &none      &none   &none   &none   &none                 &none   &none     &kp UP         &none             &none           &kp F12
&none    &none      &none   &none   &none   &none                 &none   &kp LEFT  &kp DOWN       &kp RIGHT         &kp SEMICOLON   &kp SQT
&none    &none      &none   &none   &none   &none                 &none   &none     &kp LESS_THAN  &kp GREATER_THAN  &kp SLASH       &none
&none    &kp GRAVE  &none   &none   &none   &none   &none  &none  &none   &none     &none          &to 0             &kp LEFT_BRACE  &kp RIGHT_BRACE
            >;
        };
    };
};

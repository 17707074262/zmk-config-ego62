/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    macros {
        wps1: wps1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp N1 &kp DOT>;
            label = "WPS1";
        };

        wps2: wps2 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp N2 &kp DOT>;
            label = "WPS2";
        };

        wps3: wps3 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp N3 &kp DOT>;
            label = "WPS3";
        };

        wps4: wps4 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp N4 &kp DOT>;
            label = "WPS4";
        };

        at: at {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp AT>;
            label = "AT";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        layer0 {
            bindings = <
&out OUT_USB        &kp ESCAPE  &kp CAPS  &at    &kp LC(LS(TAB))  &kp LC(TAB)                         &kp LA(ENTER)  &kp F2     &wps1          &wps2    &wps3          &wps4
&out OUT_BLE        &kp Q       &kp W     &kp E  &kp R            &kp T                               &kp Y          &kp U      &kp I          &kp O    &kp P          &to 1
&kp LC(LEFT_SHIFT)  &kp A       &kp S     &kp D  &kp F            &kp G                               &kp H          &kp J      &kp K          &kp L    &kp SEMICOLON  &to 2
&kp LEFT_SHIFT      &kp Z       &kp X     &kp C  &kp V            &kp B                               &kp N          &kp M      &kp COMMA      &kp DOT  &kp KP_SLASH   &kp UNDER
&kp LEFT_COMMAND    &none       &mo 2     &mo 1  &kp BACKSPACE    &kp LEFT_ALT  &kp LCTRL  &kp ENTER  &kp DELETE     &kp SPACE  &kp PAGE_DOWN  &kp TAB  &mkp MB1       &mkp MB2
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        layer1 {
            bindings = <
&kp F1  &kp F2     &kp F3  &kp F4  &kp F5  &kp F6                        &kp F7           &kp F8    &kp F9             &kp F10               &kp F11         &kp F12
&none   &none      &none   &none   &none   &none                         &kp RIGHT_SHIFT  &none     &kp UP             &none                 &none           &to 0
&none   &none      &none   &none   &none   &none                         &kp CAPSLOCK     &kp LEFT  &kp DOWN           &kp RIGHT             &none           &kp SQT
&none   &none      &none   &none   &none   &none                         &none            &none     &kp LS(LESS_THAN)  &kp LS(GREATER_THAN)  &none           &kp LS(GRAVE)
&none   &kp GRAVE  &none   &none   &none   &none   &none  &kp LA(ENTER)  &none            &none     &none              &none                 &kp LEFT_BRACE  &kp RIGHT_BRACE
            >;
        };

        layer2 {
            bindings = <
&bt BT_CLR  &bt BT_SEL 0   &bt BT_SEL 1   &bt BT_SEL 2  &bt BT_SEL 3   &bt BT_SEL 4                   &none   &none         &trans        &trans        &trans        &trans
&trans      &bt BT_DISC 0  &bt BT_DISC 1  &bt BT_SEL 2  &bt BT_DISC 3  &bt BT_DISC 4                  &none   &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans        &trans
&trans      &trans         &trans         &trans        &trans         &trans                         &none   &kp NUMBER_4  &kp N5        &kp NUMBER_6  &trans        &to 0
&trans      &trans         &trans         &trans        &trans         &trans                         &none   &kp N7        &kp N8        &kp N9        &trans        &trans
&trans      &trans         &trans         &trans        &trans         &trans         &trans  &trans  &trans  &trans        &trans        &trans        &kp NUMBER_0  &none
            >;
        };
    };
};
